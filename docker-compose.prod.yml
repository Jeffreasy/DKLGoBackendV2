version: '3.8'

services:
  app:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: dklautomationgo-app
    restart: always
    ports:
      - "8080:8080"
    depends_on:
      - db
    environment:
      - PORT=8080
      - ALLOWED_ORIGINS=${ALLOWED_ORIGINS:-https://dekoninklijkeloop.nl}
      - DEV_MODE=false
      - SMTP_HOST=${SMTP_HOST:-smtp.hostnet.nl}
      - SMTP_PORT=${SMTP_PORT:-587}
      - SMTP_USER=${SMTP_USER}
      - SMTP_PASSWORD=${SMTP_PASSWORD}
      - SMTP_FROM=${SMTP_FROM}
      - INFO_EMAIL_PASSWORD=${INFO_EMAIL_PASSWORD}
      - INSCHRIJVING_EMAIL_PASSWORD=${INSCHRIJVING_EMAIL_PASSWORD}
      - NOREPLY_EMAIL_PASSWORD=${NOREPLY_EMAIL_PASSWORD}
      - ADMIN_EMAIL=${ADMIN_EMAIL}
      - DB_HOST=db
      - DB_PORT=5432
      - DB_USER=${DB_USER:-postgres}
      - DB_PASSWORD=${DB_PASSWORD}
      - DB_NAME=${DB_NAME:-dklautomationgo}
      - DB_SSLMODE=disable
      - JWT_SECRET_KEY=${JWT_SECRET_KEY}
      - JWT_ACCESS_TOKEN_EXPIRY=15m
      - JWT_REFRESH_TOKEN_EXPIRY=7d
      - PASSWORD_MIN_LENGTH=8
      - PASSWORD_REQUIRE_UPPERCASE=true
      - PASSWORD_REQUIRE_LOWERCASE=true
      - PASSWORD_REQUIRE_NUMBER=true
      - PASSWORD_REQUIRE_SPECIAL=true
      - GIN_MODE=release
    volumes:
      - ./templates:/app/templates
    networks:
      - dkl-network
    healthcheck:
      test: ["CMD", "/app/scripts/healthcheck.sh"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 10s
    deploy:
      resources:
        limits:
          cpus: '1'
          memory: 512M
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

  db:
    image: postgres:16-alpine
    container_name: dklautomationgo-db
    restart: always
    expose:
      - "5432"
    environment:
      - POSTGRES_USER=${DB_USER:-postgres}
      - POSTGRES_PASSWORD=${DB_PASSWORD}
      - POSTGRES_DB=${DB_NAME:-dklautomationgo}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - dkl-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 10s
    deploy:
      resources:
        limits:
          cpus: '1'
          memory: 1G
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

  nginx:
    image: nginx:alpine
    container_name: dklautomationgo-nginx
    restart: always
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/conf.d:/etc/nginx/conf.d
      - ./nginx/ssl:/etc/nginx/ssl
      - ./nginx/www:/var/www/html
    depends_on:
      - app
    networks:
      - dkl-network
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 10s
    deploy:
      resources:
        limits:
          cpus: '0.5'
          memory: 256M
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

networks:
  dkl-network:
    driver: bridge

volumes:
  postgres_data: 